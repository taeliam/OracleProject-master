-----------STOCK TRADING COMMISSIONS MANAGEMENT---------------
-----------CREATE AND INSERT TABLE---------------
CREATE TABLE LOSE(
LOSE_ID INT NOT NULL,
LOSE_PERCENT INT NOT NULL,
PRIMARY KEY(LOSE_ID)
);


CREATE TABLE SPLIT(
SPLIT_ID INT NOT NULL,
SPLIT_PERCENT INT NOT NULL,
PRIMARY KEY(SPLIT_ID )
);


CREATE TABLE PRINCIPLE(
PRIN_ID INT NOT NULL,
PRIN_NUMBER INT NOT NULL,
PRIMARY KEY(PRIN_ID);

CREATE TABLE COM_TYPE(
CT_ID INT NOT NULL,
CT_NAME VARCHAR2(50)NOT NULL,
PRIMARY KEY(CT_ID)
);


CREATE TABLE COM_RATE(
CR_ID INT NOT NULL,
CR_BUY_FROM NUMBER NOT NULL,
CR_BUY_TO NUMBER NOT NULL,
CR_RATE DECIMAL(3,3) NOT NULL,
PRIMARY KEY(CR_ID)
);



CREATE TABLE CUSTOMER(
CUS_ID INT NOT NULL,
CUS_NAME VARCHAR(50) NOT NULL,
PRIN_ID INT NOT NULL,
SPLIT_ID INT NOT NULL,
LOSE_ID INT NOT NULL,
PRIMARY KEY(CUS_ID),
FOREIGN KEY (PRIN_ID) REFERENCES PRINCIPLE(PRIN_ID),
FOREIGN KEY (SPLIT_ID) REFERENCES SPLIT(SPLIT_ID),
FOREIGN KEY (LOSE_ID) REFERENCES LOSE(LOSE_ID)
);


CREATE TABLE STOCK(
S_ID INT NOT NULL,
S_NAME VARCHAR(50) NOT NULL,
S_PRICE NUMBER NOT NULL,
S_PROFIT NUMBER NOT NULL,
S_STOP NUMBER NOT NULL,
PRIMARY KEY(S_ID)
);



CREATE TABLE INVESTMENT(
IN_ID INT NOT NULL,
CUS_ID INT NOT NULL,
S_ID INT NOT NULL,
CT_ID INT NOT NULL,
PRIMARY KEY(IN_ID),
FOREIGN KEY (CUS_ID) REFERENCES CUSTOMER(CUS_ID),
FOREIGN KEY (S_ID) REFERENCES STOCK(S_ID),
FOREIGN KEY (CT_ID) REFERENCES COM_TYPE(CT_ID)
);


INSERT INTO LOSE VALUES(1,1);
INSERT INTO LOSE VALUES(2,2);
INSERT INTO LOSE VALUES(3,3);
INSERT INTO LOSE VALUES(4,4);
INSERT INTO LOSE VALUES(5,5);


INSERT INTO SPLIT VALUES(1,5);
INSERT INTO SPLIT VALUES(2,10);
INSERT INTO SPLIT VALUES(3,15);
INSERT INTO SPLIT VALUES(4,20);
INSERT INTO SPLIT VALUES(5,25);


INSERT INTO PRINCIPLE VALUES(1,100000);
INSERT INTO PRINCIPLE VALUES(2,500000);
INSERT INTO PRINCIPLE VALUES(3,1000000);
INSERT INTO PRINCIPLE VALUES(4,5000000);
INSERT INTO PRINCIPLE VALUES(5,10000000);
INSERT INTO PRINCIPLE VALUES(6,50000000);
INSERT INTO PRINCIPLE VALUES(7,100000000);



INSERT INTO STOCK VALUES(1,'PTT',40,50,35);
INSERT INTO STOCK VALUES(2,'SCG',394,500,350);
INSERT INTO STOCK VALUES(3,'FACEBOOK',10740.37,11500,8250);
INSERT INTO STOCK VALUES(4,'AMAZON',107746.41,120000,100000);
INSERT INTO STOCK VALUES(5,'GOOGLE',90547.56,150000,89000);


INSERT INTO CUSTOMER VALUES(1,'SOMJIT','1','2','1');
INSERT INTO CUSTOMER VALUES(2,'SOMBUT','1','4','2');
INSERT INTO CUSTOMER VALUES(3,'SOMSRI','3','4','5');
INSERT INTO CUSTOMER VALUES(4,'SOMSRAK','6','3','2');
INSERT INTO CUSTOMER VALUES(5,'SOMSOY','7','5','5');


INSERT INTO COM_TYPE VALUES(1,'OFFICER');
INSERT INTO COM_TYPE VALUES(2,'CASH ACCOUNT');
INSERT INTO COM_TYPE VALUES(3,'CASH BALANCE');

INSERT INTO COM_RATE VALUES(1,1,5000000,0.257,1);
INSERT INTO COM_RATE VALUES(2,5000001,10000000,0.227,1);
INSERT INTO COM_RATE VALUES(3,10000001,20000000,0.187,1);
INSERT INTO COM_RATE VALUES(4,20000001,1000000000,0.157,1);
INSERT INTO COM_RATE VALUES(5,1,5000000,0.207,2);
INSERT INTO COM_RATE VALUES(6,5000001,10000000,0.187,2);
INSERT INTO COM_RATE VALUES(7,10000001,20000000,0.157,2);
INSERT INTO COM_RATE VALUES(8,20000001,1000000000,0.127,2);
INSERT INTO COM_RATE VALUES(9,1,5000000,0.157,3);
INSERT INTO COM_RATE VALUES(10,5000001,10000000,0.137,3);
INSERT INTO COM_RATE VALUES(11,10000001,20000000,0.117,3);
INSERT INTO COM_RATE VALUES(12,20000001,1000000000,0.107,3);


INSERT INTO INVESTMENT VALUES(1,1,1,1);
INSERT INTO INVESTMENT VALUES(2,1,2,1);
INSERT INTO INVESTMENT VALUES(3,2,3,2);
INSERT INTO INVESTMENT VALUES(4,3,4,2);
INSERT INTO INVESTMENT VALUES(5,4,5,3);
INSERT INTO INVESTMENT VALUES(6,5,1,3);









-------------CUSTOMER NAME AND PRINCIPLE--------------------
SELECT CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE
FROM CUSTOMER;


------PRIN SPLIT--------
SELECT CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT
FROM CUSTOMER;


------LOSE--------
SELECT CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE
FROM CUSTOMER;


------INVESTMENT--------

SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;



------STOCK_NAME--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------STOCK_PRICE--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------RRR--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
	(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------SUGGEST--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
	(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR,
	(SELECT CASE
		WHEN S_PROFIT-S_PRICE > S_PRICE-S_STOP THEN 'WORTH TO TAKE RISK'
		WHEN S_PRICE-S_STOP > S_PROFIT-S_PRICE THEN 'NOT WORTH TO TAKE RISK'
		ELSE 'EQUAL'
		END SUGGEST
	FROM STOCK 
	WHERE STOCK.S_ID = INVESTMENT.S_ID) SUGGEST
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------QTY--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
	(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR,
	(SELECT CASE
		WHEN S_PROFIT-S_PRICE > S_PRICE-S_STOP THEN 'WORTH TO TAKE RISK'
		WHEN S_PRICE-S_STOP > S_PROFIT-S_PRICE THEN 'NOT WORTH TO TAKE RISK'
		ELSE 'EQUAL'
		END SUGGEST
	FROM STOCK 
	WHERE STOCK.S_ID = INVESTMENT.S_ID) SUGGEST,
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = 
		CUSTOMER.SPLIT_ID)/100)/(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) QTY
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------COMISSION TYPE--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
	(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR,
	(SELECT CASE
		WHEN S_PROFIT-S_PRICE > S_PRICE-S_STOP THEN 'WORTH TO TAKE RISK'
		WHEN S_PRICE-S_STOP > S_PROFIT-S_PRICE THEN 'NOT WORTH TO TAKE RISK'
		ELSE 'EQUAL'
		END SUGGEST
	FROM STOCK 
	WHERE STOCK.S_ID = INVESTMENT.S_ID) SUGGEST,
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = 
		CUSTOMER.SPLIT_ID)/100)/(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) QTY,
	(SELECT CT_NAME FROM COM_TYPE WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) COM_TYPE
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;



------COMISSION FEE--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
	(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR,
	(SELECT CASE
		WHEN S_PROFIT-S_PRICE > S_PRICE-S_STOP THEN 'WORTH TO TAKE RISK'
		WHEN S_PRICE-S_STOP > S_PROFIT-S_PRICE THEN 'NOT WORTH TO TAKE RISK'
		ELSE 'EQUAL'
		END SUGGEST
	FROM STOCK 
	WHERE STOCK.S_ID = INVESTMENT.S_ID) SUGGEST,
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = 
		CUSTOMER.SPLIT_ID)/100)/(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) QTY,
	(SELECT CT_NAME FROM COM_TYPE WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) COM_TYPE,
	(SELECT 
		(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
		FROM COM_RATE 
		WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)
			BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
	FROM COM_TYPE 
	WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) FEE
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------COMISSION FEE VAT--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,
	(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
	((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
	(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*
	(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
	(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
	(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
	(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR,
	(SELECT CASE
		WHEN S_PROFIT-S_PRICE > S_PRICE-S_STOP THEN 'WORTH TO TAKE RISK'
		WHEN S_PRICE-S_STOP > S_PROFIT-S_PRICE THEN 'NOT WORTH TO TAKE RISK'
		ELSE 'EQUAL'
		END SUGGEST
	FROM STOCK 
	WHERE STOCK.S_ID = INVESTMENT.S_ID) SUGGEST,
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = 
		CUSTOMER.SPLIT_ID)/100)/(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) QTY,
	(SELECT CT_NAME FROM COM_TYPE WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) COM_TYPE,
	(SELECT 
		(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
		FROM COM_RATE 
		WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)
			BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
	FROM COM_TYPE 
	WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) FEE,
	((SELECT 
		(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
		FROM COM_RATE 
		WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) 
		BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
	FROM COM_TYPE 
	WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID)*7/100) VAT
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID;


------PAY ALL--------
SELECT INVESTMENT.IN_ID,CUSTOMER.CUS_NAME,(SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID) AS PRINCIPLE,
((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) AS PRIN_SPLIT,
(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*(SELECT LOSE_PERCENT FROM LOSE WHERE LOSE.LOSE_ID = CUSTOMER.LOSE_ID)/100) AS LOSE,
(SELECT S_NAME FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_NAME,
(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) STOCK_PRICE,
(SELECT ROUND((S_PROFIT-S_PRICE)/(S_PRICE-S_STOP),2) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) RRR,
(SELECT CASE
	WHEN S_PROFIT-S_PRICE > S_PRICE-S_STOP THEN 'WORTH TO TAKE RISK'
	WHEN S_PRICE-S_STOP > S_PROFIT-S_PRICE THEN 'NOT WORTH TO TAKE RISK'
	ELSE 'EQUAL'
	END SUGGEST
	FROM STOCK 
	WHERE STOCK.S_ID = INVESTMENT.S_ID) SUGGEST,
(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)/(SELECT S_PRICE FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) FROM STOCK WHERE STOCK.S_ID = INVESTMENT.S_ID) QTY,
(SELECT CT_NAME FROM COM_TYPE WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) COM_TYPE,
(SELECT 
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
	FROM COM_RATE 
	WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
FROM COM_TYPE 
WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) FEE,
((SELECT 
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
	FROM COM_RATE 
	WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
FROM COM_TYPE 
WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID)*7/100) VAT,
(((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) + 
(SELECT 
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
	FROM COM_RATE 
	WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
FROM COM_TYPE 
WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID) + 
((SELECT 
	(SELECT ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100)*CR_RATE/100
	FROM COM_RATE 
	WHERE ((SELECT PRIN_NUMBER FROM PRINCIPLE WHERE PRINCIPLE.PRIN_ID = CUSTOMER.PRIN_ID)*(SELECT SPLIT_PERCENT FROM SPLIT WHERE SPLIT.SPLIT_ID = CUSTOMER.SPLIT_ID)/100) BETWEEN COM_RATE.CR_BUY_FROM AND COM_RATE.CR_BUY_TO AND COM_RATE.CT_ID=COM_TYPE.CT_ID) 
FROM COM_TYPE 
WHERE COM_TYPE.CT_ID = INVESTMENT.CT_ID)*7/100)) PAY_TOTAL
FROM CUSTOMER
INNER JOIN INVESTMENT ON INVESTMENT.CUS_ID = CUSTOMER.CUS_ID
INNER JOIN COM_TYPE ON COM_TYPE.CT_ID = INVESTMENT.CT_ID;